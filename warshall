#include <stdio.h>

#define MAX_NODES 100

int graph[MAX_NODES][MAX_NODES];
int transitive_closure[MAX_NODES][MAX_NODES];

void warshall(int n) {
    int i, j, k;
    
    // Initialize transitive closure matrix with the given graph
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            transitive_closure[i][j] = graph[i][j];
        }
    }

    // Applying Warshall's algorithm
    for (k = 0; k < n; k++) {
        for (i = 0; i < n; i++) {
            for (j = 0; j < n; j++) {
                transitive_closure[i][j] = transitive_closure[i][j] || (transitive_closure[i][k] && transitive_closure[k][j]);
            }
        }
    }
}

void printTransitiveClosure(int n) {
    printf("Transitive Closure Matrix:\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            printf("%d ", transitive_closure[i][j]);
        }
        printf("\n");
    }
}

int main() {
    int n;

    printf("Enter the number of nodes in the graph: ");
    scanf("%d", &n);

    printf("Enter the adjacency matrix of the graph:\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &graph[i][j]);
        }
    }

    warshall(n);

    printTransitiveClosure(n);

    return 0;
}
